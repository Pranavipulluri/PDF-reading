#!/usr/bin/env python3
"""Beautiful web interface for PDF outline extractor"""
import os, json, tempfile, sys
from pathlib import Path
from flask import Flask, request, jsonify, render_template_string
sys.path.append('/app/src')
sys.path.append('src')
try:
    from main_ultra_simple import extract_pdf_outline
except ImportError:
    def extract_pdf_outline(pdf_path, output_path): return False

app = Flask(__name__)
app.config['MAX_CONTENT_LENGTH'] = 50 * 1024 * 1024

HTML_TEMPLATE = """^<!DOCTYPE html^>
<html lang="en"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>PDF Outline Extractor</title>
<style>* {margin:0;padding:0;box-sizing:border-box;} body {font-family:'Segoe UI',sans-serif;background:linear-gradient(135deg,#667eea 0%,#764ba2 100%);min-height:100vh;padding:20px;} .container {max-width:1200px;margin:0 auto;} .header {text-align:center;margin-bottom:40px;color:white;} .header h1 {font-size:2.5rem;margin-bottom:10px;text-shadow:2px 2px 4px rgba(0,0,0,0.3);} .header p {font-size:1.1rem;opacity:0.9;} .main-content {display:grid;grid-template-columns:1fr 1fr;gap:30px;margin-bottom:30px;} @media (max-width:768px) {.main-content {grid-template-columns:1fr;}} .card {background:white;border-radius:15px;padding:30px;box-shadow:0 10px 30px rgba(0,0,0,0.2);transition:transform 0.3s ease;} .card:hover {transform:translateY(-5px);} .upload-area {border:3px dashed #667eea;border-radius:10px;padding:40px 20px;text-align:center;cursor:pointer;transition:all 0.3s ease;background:#f8f9ff;} .upload-area:hover {border-color:#764ba2;background:#f0f4ff;} .upload-area.dragover {border-color:#5a67d8;background:#e6fffa;transform:scale(1.02);} .upload-icon {font-size:3rem;color:#667eea;margin-bottom:15px;} .upload-text {font-size:1.1rem;color:#555;margin-bottom:10px;} .upload-hint {font-size:0.9rem;color:#888;} #fileInput {display:none;} .btn {background:linear-gradient(135deg,#667eea 0%,#764ba2 100%);color:white;border:none;padding:12px 30px;border-radius:25px;cursor:pointer;font-size:1rem;font-weight:600;transition:all 0.3s ease;margin-top:15px;} .btn:hover {transform:translateY(-2px);box-shadow:0 5px 15px rgba(102,126,234,0.4);} .btn:disabled {opacity:0.6;cursor:not-allowed;transform:none;} .processing {display:none;text-align:center;margin:20px 0;} .spinner {width:40px;height:40px;border:4px solid #f3f3f3;border-top:4px solid #667eea;border-radius:50%;animation:spin 1s linear infinite;margin:0 auto 15px;} @keyframes spin {0% {transform:rotate(0deg);} 100% {transform:rotate(360deg);}} .results {display:none;} .results-header {display:flex;justify-content:space-between;align-items:center;margin-bottom:20px;padding-bottom:15px;border-bottom:2px solid #f0f0f0;} .results-title {color:#333;font-size:1.3rem;font-weight:600;} .stats {display:flex;gap:15px;} .stat {background:#f8f9ff;padding:8px 15px;border-radius:20px;font-size:0.9rem;color:#667eea;font-weight:600;} .document-title {background:linear-gradient(135deg,#667eea 0%,#764ba2 100%);color:white;padding:15px 20px;border-radius:10px;margin-bottom:20px;font-size:1.1rem;font-weight:600;} .outline-item {margin:10px 0;padding:12px 15px;background:#f9f9f9;border-radius:8px;border-left:4px solid #667eea;transition:all 0.3s ease;} .outline-item:hover {background:#f0f4ff;transform:translateX(5px);} .outline-item.h1 {border-left-color:#e53e3e;font-weight:600;font-size:1.1rem;} .outline-item.h2 {border-left-color:#3182ce;margin-left:20px;font-weight:500;} .outline-item.h3 {border-left-color:#38a169;margin-left:40px;font-size:0.95rem;} .page-number {float:right;background:#667eea;color:white;padding:2px 8px;border-radius:10px;font-size:0.8rem;font-weight:600;} .empty-state {text-align:center;color:#888;padding:40px 20px;} .empty-icon {font-size:4rem;margin-bottom:15px;opacity:0.5;} .download-btn {background:#38a169;margin-top:20px;} .download-btn:hover {box-shadow:0 5px 15px rgba(56,161,105,0.4);} .file-info {display:none;background:#e6fffa;border:1px solid #81e6d9;border-radius:8px;padding:15px;margin-top:15px;} .file-name {font-weight:600;color:#2d3748;margin-bottom:5px;} .file-size {color:#4a5568;font-size:0.9rem;} .error-message {display:none;background:#fed7d7;border:1px solid #fc8181;color:#c53030;padding:15px;border-radius:8px;margin-top:15px;} .alert {padding:12px 16px;border-radius:8px;margin:10px 0;font-weight:500;} .alert-success {background:#c6f6d5;border:1px solid #9ae6b4;color:#22543d;} .features {background:white;border-radius:15px;padding:30px;box-shadow:0 10px 30px rgba(0,0,0,0.2);margin-top:30px;} .features h3 {color:#333;margin-bottom:20px;text-align:center;} .feature-list {display:grid;grid-template-columns:repeat(auto-fit,minmax(250px,1fr));gap:15px;} .feature-item {display:flex;align-items:center;padding:10px;background:#f8f9ff;border-radius:8px;} .feature-icon {background:#667eea;color:white;width:35px;height:35px;border-radius:50%;display:flex;align-items:center;justify-content:center;margin-right:12px;font-size:1.1rem;}
</style></head><body><div class="container"><div class="header"><h1>üìÑ PDF Outline Extractor</h1><p>Extract headings with AI precision - Web & CLI modes</p></div><div class="main-content"><div class="card"><h2 style="margin-bottom:20px;color:#333;">Upload PDF</h2><div class="upload-area" id="uploadArea"><div class="upload-icon">üìÅ</div><div class="upload-text">Click or drag PDF file here</div><div class="upload-hint">Supports PDF files up to 50MB</div></div><input type="file" id="fileInput" accept=".pdf"/><div class="file-info" id="fileInfo"><div class="file-name" id="fileName"></div><div class="file-size" id="fileSize"></div></div><button class="btn" id="processBtn" disabled>üöÄ Extract Outline</button><div class="processing" id="processing"><div class="spinner"></div><div>Processing your PDF...</div></div><div class="error-message" id="errorMessage"></div></div><div class="card"><div class="results" id="results"><div class="results-header"><div class="results-title">üìã Extracted Outline</div><div class="stats"><div class="stat" id="headingCount">0 headings</div><div class="stat" id="pageCount">0 pages</div></div></div><div class="document-title" id="documentTitle"></div><div class="outline-container" id="outlineContainer"></div><button class="btn download-btn" id="downloadBtn">üíæ Download JSON</button></div><div class="empty-state" id="emptyState"><div class="empty-icon">üìÑ</div><div>Upload a PDF to see the extracted outline</div></div></div></div><div class="features"><h3>‚ú® Features</h3><div class="feature-list"><div class="feature-item"><div class="feature-icon">ü§ñ</div><div>AI-powered detection</div></div><div class="feature-item"><div class="feature-icon">‚ö°</div><div>Fast processing (<10s)</div></div><div class="feature-item"><div class="feature-icon">üì±</div><div>Mobile-friendly</div></div><div class="feature-item"><div class="feature-icon">üíæ</div><div>JSON export</div></div></div></div></div>
<script>
class PDFOutlineExtractor {constructor(){this.initializeElements();this.attachEventListeners();this.currentFile=null;this.currentResults=null;} initializeElements(){this.uploadArea=document.getElementById('uploadArea');this.fileInput=document.getElementById('fileInput');this.fileInfo=document.getElementById('fileInfo');this.fileName=document.getElementById('fileName');this.fileSize=document.getElementById('fileSize');this.processBtn=document.getElementById('processBtn');this.processing=document.getElementById('processing');this.results=document.getElementById('results');this.emptyState=document.getElementById('emptyState');this.documentTitle=document.getElementById('documentTitle');this.outlineContainer=document.getElementById('outlineContainer');this.headingCount=document.getElementById('headingCount');this.pageCount=document.getElementById('pageCount');this.downloadBtn=document.getElementById('downloadBtn');this.errorMessage=document.getElementById('errorMessage');} attachEventListeners(){this.uploadArea.addEventListener('click',()=>this.fileInput.click());this.uploadArea.addEventListener('dragover',this.handleDragOver.bind(this));this.uploadArea.addEventListener('dragleave',this.handleDragLeave.bind(this));this.uploadArea.addEventListener('drop',this.handleDrop.bind(this));this.fileInput.addEventListener('change',this.handleFileSelect.bind(this));this.processBtn.addEventListener('click',this.processFile.bind(this));this.downloadBtn.addEventListener('click',this.downloadResults.bind(this));} handleDragOver(e){e.preventDefault();this.uploadArea.classList.add('dragover');} handleDragLeave(e){e.preventDefault();this.uploadArea.classList.remove('dragover');} handleDrop(e){e.preventDefault();this.uploadArea.classList.remove('dragover');const files=e.dataTransfer.files;if(files.length>0){this.handleFile(files[0]);}} handleFileSelect(e){const file=e.target.files[0];if(file){this.handleFile(file);}} handleFile(file){if(!file.type.includes('pdf')){this.showError('Please select a PDF file');return;} if(file.size>50*1024*1024){this.showError('File size must be less than 50MB');return;} this.currentFile=file;this.showFileInfo(file);this.processBtn.disabled=false;this.hideError();} showFileInfo(file){this.fileName.textContent=file.name;this.fileSize.textContent=this.formatFileSize(file.size);this.fileInfo.style.display='block';} formatFileSize(bytes){if(bytes===0)return '0 Bytes';const k=1024;const sizes=['Bytes','KB','MB','GB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];} async processFile(){if(!this.currentFile)return;this.showProcessing();try{const formData=new FormData();formData.append('pdf',this.currentFile);const response=await fetch('/api/extract',{method:'POST',body:formData});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||'Failed to process PDF');} const results=await response.json();this.showResults(results);}catch(error){this.showError('Failed to process PDF: '+error.message);}finally{this.hideProcessing();}} showProcessing(){this.processBtn.disabled=true;this.processing.style.display='block';this.results.style.display='none';this.emptyState.style.display='none';} hideProcessing(){this.processBtn.disabled=false;this.processing.style.display='none';} showResults(data){this.currentResults=data;this.documentTitle.textContent=`üìÑ ${data.title}`;this.headingCount.textContent=`${data.outline.length} headings`;const maxPage=data.outline.length>0?Math.max(...data.outline.map(h=>h.page)):1;this.pageCount.textContent=`${maxPage} pages`;this.renderOutline(data.outline);this.results.style.display='block';this.emptyState.style.display='none';this.showSuccess('Outline extracted successfully!');} renderOutline(outline){this.outlineContainer.innerHTML='';if(outline.length===0){this.outlineContainer.innerHTML='<div style="text-align:center;color:#666;padding:20px;">No headings detected.</div>';return;} outline.forEach(item=>{const div=document.createElement('div');div.className=`outline-item ${item.level.toLowerCase()}`;div.innerHTML=`${item.text} <span class="page-number">p. ${item.page}</span>`;this.outlineContainer.appendChild(div);});} downloadResults(){if(!this.currentResults)return;const blob=new Blob([JSON.stringify(this.currentResults,null,2)],{type:'application/json'});const url=URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=`${this.currentResults.title.replace(/[a-z0-9]/gi,'_')}_outline.json`;document.body.appendChild(a);a.click();document.body.removeChild(a);URL.revokeObjectURL(url);this.showSuccess('Outline downloaded!');} showError(message){this.errorMessage.textContent=message;this.errorMessage.style.display='block';setTimeout(()=>this.hideError(),5000);} hideError(){this.errorMessage.style.display='none';} showSuccess(message){const alert=document.createElement('div');alert.className='alert alert-success';alert.textContent=message;this.processBtn.parentNode.insertBefore(alert,this.processBtn.nextSibling);setTimeout(()=>{if(alert.parentNode){alert.parentNode.removeChild(alert);}},3000);}} document.addEventListener('DOMContentLoaded',()=>{new PDFOutlineExtractor();});
</script></body></html>"""

@app.route('/')
def index(): return render_template_string(HTML_TEMPLATE)

@app.route('/api/extract', methods=['POST'])
def extract_api():
    try:
        if 'pdf' not in request.files: return jsonify({'error':'No PDF uploaded'}), 400
        file = request.files['pdf']
        if not file.filename.lower().endswith('.pdf'): return jsonify({'error':'Please upload PDF'}), 400
        with tempfile.NamedTemporaryFile(delete=False, suffix='.pdf') as temp_pdf:
            file.save(temp_pdf.name); temp_pdf_path = temp_pdf.name
        with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_json:
            temp_json_path = temp_json.name
        try:
            success = extract_pdf_outline(temp_pdf_path, temp_json_path)
            if not success: return jsonify({'error':'Processing failed'}), 500
            with open(temp_json_path, 'r', encoding='utf-8') as f:
                results = json.load(f)
            return jsonify(results)
        finally:
            try: os.unlink(temp_pdf_path); os.unlink(temp_json_path)
            except: pass
    except Exception as e: return jsonify({'error':f'Error: {str(e)}'}), 500

@app.route('/health')
def health(): return jsonify({'status':'healthy'})

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port, debug=False)
